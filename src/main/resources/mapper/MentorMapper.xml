<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="connectCode.mapper.MentorMapper">

<select id="accepted_mentoring_count" resultType="int">
	SELECT COUNT(*)
	FROM mentoring
	LEFT JOIN service USING (service_no) 
	WHERE mentor_no = #{mentor_no}
	AND classification = 35
</select>

<select id="mentoring_review_count" resultType="int">
	SELECT COUNT(*) 
	FROM mentoring
	LEFT JOIN review USING (mentoring_no)
	LEFT JOIN service USING (service_no) 
	WHERE mentor_no = #{mentor_no} 
	AND classification = 35 
	AND review_no is not null
</select>

<select id="select_accepted_mentoring" resultType="MentorDTO">
	SELECT
	  * 
	FROM mentoring
	LEFT JOIN mentee USING (mentee_no)
	LEFT JOIN service USING (service_no) 
	WHERE mentor_no = #{mentor_no}
	AND classification = 32 
	ORDER BY reserve_date DESC LIMIT 3
</select>

<!-- Mentor 테이블 mentor_no으로 조회 [mentor 테이블 전체 & 재직중인 회사 & 알람수 조회] -->
<select id="mentorProfile" resultType="MentorDTO">
	SELECT
	 *
	FROM mentor m
	LEFT JOIN (
		SELECT mentor_no, company, entering_date, departure_date 
		FROM career 
		WHERE departure_date IS NULL
		) c 
	USING (mentor_no)
	LEFT JOIN (
		SELECT COUNT(*) AS alarm_count, receiver_mem_no AS member_no 
		FROM alarm 
		WHERE receiver_mem_no = #{member_no} and read_yn = 'N' group by receiver_mem_no) a 
	USING (member_no)
	LEFT JOIN file f 
	ON m.profile_img_no = f.file_no
	WHERE mentor_no=#{mentor_no}
	ORDER BY entering_date
	LIMIT 1
</select>

<!-- <select id="file_select" resultType="">
	SELECT 
	  * 
	FROM file
	WHERE file_no = #{file_no}
</select> -->

<!-- mentor 테이블 update -->
<update id="mentorTBL_update" parameterType="MentorDTO">
	<selectKey keyProperty="file_no" resultType="int" order="BEFORE">
		SELECT COALESCE(MAX(file_no),0)+1 AS file_no
		FROM file
	</selectKey>

	UPDATE mentor 
	SET 
	
	<choose>
		<!-- 경우 1 : 기본정보 -->
		<when test="intro != null and unable_date != null and mentoring_time != null">
			  intro = #{intro}
			<if test="files.size() != 0">
			, profile_img_no = #{file_no}
			</if>
			, unable_date = #{unable_date}
			, mentoring_time = #{mentoring_time}
		</when>
		<!-- 경우 2 : 서비스 요금 -->
		<when test="phone != null and email != null">
			  phone = #{phone}
			, email = #{email}  
		</when>
		<!-- 경우 2 : 서비스 요금 -->
		<when test="bank != null and account != null and account_name != null">
			  bank = #{bank}
			, account = #{account}
			, account_name = #{account_name}
		</when>	
		<!-- 경우 3 : 기술 및 분야 -->
		<when test="technology != null">
			technology = #{technology}
		</when>
	</choose>
	
	WHERE mentor_no = #{mentor_no}
	
</update>

<!-- 프로필 미작성 멘토인 경우 요청 멘토로 up -->
<update id="apply_mentor_classification" parameterType="MentorDTO">
	UPDATE mentor 
	SET classification = 22
	WHERE mentor_no = #{mentor_no}
</update>

<!-- mentor 테이블 update -->
<update id="mentorPerson_update" parameterType="MentorDTO">
	UPDATE mentor 
	SET phone = #{phone} 
	 , email = #{email}  
	WHERE mentor_no = #{mentor_no}
</update>


<!-- ************************************* [서비스 요금] start ************************************* -->

<!-- service 테이블 insert -->
<insert id="service_insert" parameterType="MentorDTO">
	INSERT INTO service (
	 mentoring_kind, mentoring_fee, mentor_no, available_NY
	) VALUES (
	    #{mentoring_kind}
	  , #{mentoring_fee}
	  , #{mentor_no}
	  , #{available_NY}
	)
</insert>

<!-- service 테이블 select -->
<select id="service_select" resultType="MentorDTO">
	SELECT
	  * 
	FROM service 
	WHERE mentor_no = #{mentor_no}
</select>

<!-- service 테이블 update -->
<update id="service_update" parameterType="MentorDTO">
	UPDATE service 
	SET
	   mentoring_fee = #{mentoring_fee}
	 , available_NY = #{available_NY}
	WHERE mentor_no = #{mentor_no} 
	AND mentoring_kind = #{mentoring_kind}
</update>

<!-- ************************************* [서비스 요금] end ************************************* -->
<!-- ************************************* [학력사항] start ************************************* -->

<!-- education 테이블 insert -->
<insert id="education_insert" parameterType="MentorDTO">
	<selectKey keyProperty="file_no" resultType="int" order="BEFORE">
		SELECT COALESCE(MAX(file_no),0)+1 AS file_no
		FROM file
	</selectKey>

	INSERT INTO education (
		  school
		, entering_date
		, graduation_date
		, degree
		, major
		, minor
		, file_no
		, mentor_no
	) VALUES (
		  #{school}
		, CONCAT(#{entering_date},'-01')
		, CONCAT(#{graduation_date},'-01')
		, #{degree}
		, #{major}
		, #{minor}
		, #{file_no}
		, #{mentor_no}
	)
</insert>

<!-- education 테이블 select -->
<select id="education_select" resultType="MentorDTO">
	SELECT 
	  *
	  , entering_date e_date
	  , graduation_date g_date
	FROM education 
	WHERE mentor_no = #{mentor_no}
</select>

<!-- education 테이블 update -->
<delete id="education_delete" parameterType="MentorDTO">
	DELETE 
	FROM education
	WHERE mentor_no = #{mentor_no}
</delete>

<!-- ************************************* [학력사항] end ************************************* -->
<!-- ************************************* [경력사항] start ************************************* -->

<!-- career 테이블 insert -->
<insert id="career_insert" parameterType="MentorDTO">
	<selectKey keyProperty="file_no" resultType="int" order="BEFORE">
		SELECT COALESCE(MAX(file_no),0)+1 AS file_no
		FROM file
	</selectKey>
	
	INSERT INTO career (
		  company
		, entering_date
		, departure_date
		, task
		, years
		, file_no
		, mentor_no
	) VALUES (
		  #{company}
		, #{entering_date}
		, #{departure_date}
		, #{task}
		, #{years}
		, #{file_no}
		, #{mentor_no}
	)
</insert>

<!-- career 테이블 select -->
<select id="career_select" resultType="MentorDTO">
	SELECT 
	  *
	  , entering_date e_date
	  , departure_date d_date
	FROM career
	WHERE mentor_no = #{mentor_no}
</select>

<!-- career 테이블 update -->
<delete id="career_delete">
	DELETE
	FROM career
	WHERE mentor_no = #{mentor_no}
</delete>

<!-- ************************************* [경력사항] end ************************************* -->
<!-- ************************************* [기술및분야] start ************************************* -->

<select id="license_select" resultType="MentorDTO">
	SELECT
	  *
	  , issuing_date i_date
	FROM license
	WHERE mentor_no = #{mentor_no}
</select>

<insert id="license_insert" parameterType="MentorDTO">
	<selectKey keyProperty="file_no" resultType="int" order="BEFORE">
		SELECT COALESCE(MAX(file_no),0)+1 AS file_no
		FROM file
	</selectKey>
	
	INSERT INTO license (
		  kind
		, license_name
		, issuing_authority
		, issuing_date
		, file_no
		, mentor_no
	) VALUES (
		  #{kind}
		, #{license_name}
		, #{issuing_authority}
		, #{issuing_date}
		, #{file_no}
		, #{mentor_no}
	)
</insert>

<!-- ************************************* [기술및분야] end ************************************* -->

<select id="select_file" resultType="FileDTO">
	SELECT
	  *
	FROM file
	WHERE file_no = #{file_no}
</select>

<delete id="delete_file" parameterType="int">
	DELETE
	FROM file
	WHERE file_no = #{file_no}
</delete>

<select id="select_alarm" resultType="MentorDTO">
	SELECT
		ROW_NUMBER() OVER (ORDER BY happen_time) AS row_num,
		alarm.*
	FROM alarm 
	WHERE receiver_mem_no = #{member_no}
		<if test="search == null and keyword != null">
		  AND (title LIKE CONCAT('%', #{keyword}, '%')
		  or content LIKE CONCAT('%', #{keyword}, '%'))
		</if>
	ORDER BY
  	happen_time DESC
	LIMIT #{startRow}, 10
</select>

<!-- 알림 총 데이터수 -->
<select id="getTotal" resultType="int">
      select count(*) from alarm where receiver_mem_no=#{member_no}
      <if test="search == null and keyword != null">
      AND (title LIKE CONCAT('%', #{keyword}, '%')
      or content LIKE CONCAT('%', #{keyword}, '%'))
    </if>
</select>

<select id="select_alarm_detail" resultType="MentorDTO">
	SELECT
	  * 
	FROM alarm 
	WHERE receiver_mem_no = #{member_no} and alarm_no = #{alarm_no}
</select>

<update id="update_alarm" parameterType="MentorDTO">
	UPDATE alarm
	SET read_yn = 'Y'
	WHERE alarm_no = #{alarm_no}
</update>

<!--**************************** 혜지 작성 ******************************** -->
   <select   id="mentorDetail" resultType="MentorDTO">
      select * from mentor left join member on mentor.member_no=member.member_no
      where mentor_no=#{mentor_no}
   </select>

   <insert id="insertquittbl" parameterType="MentorDTO">
      insert into quit_member values(sysdate(),#{quit_reason},#{member_no})
   </insert>
   
   <update id="quit_mentor" parameterType="MentorDTO">
      update member set classification = 14 where member_no=#{member_no}
   </update>
   
   <update id="mentorNewPwd" parameterType="MentorDTO">
      update member set password=#{password} where member_no=#{member_no}
   </update>


</mapper>